# .github/workflows/dotnet.yml
name: .NET CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_NAME: .

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_NAME }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_NAME }} --configuration Release --no-restore

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ${{ env.PROJECT_NAME }}/bin/Release/
            ${{ env.PROJECT_NAME }}/obj/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run Tests with Code Coverage
        run: |
          dotnet test ${{ env.PROJECT_NAME }} \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ${{ env.PROJECT_NAME }}/artifacts/test_results/ \
            /p:CollectCoverage=true \
            /p:Threshold=50 \
            /p:ThresholdStat=total \
            /p:ExcludeByFile="**/Migrations/*"

      - name: Find coverage file
        id: coverage-file
        run: |
          echo "COVERAGE_FILE=$(find ${{ env.PROJECT_NAME }}/artifacts/test_results/ -name 'coverage.cobertura.xml' | head -n 1)" >> $GITHUB_ENV

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ env.COVERAGE_FILE }}
